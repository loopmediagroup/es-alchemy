{
  "orderBy": [
    [
      "is_limited",
      "desc"
    ],
    [
      "flagged",
      "desc"
    ],
    [
      "placement_priority",
      "desc"
    ]
  ],
  "index": {
    "fields": [
      "id",
      "name",
      "desc",
      "starts",
      "ends",
      "enabled",
      "exclusive",
      "flagged",
      "is_limited",
      "placement_priority",
      "returned_for_type_a",
      "returned_for_type_c",
      "returned_for_type_b",
      "notify_type_b",
      "notify_type_a",
      "min_version"
    ],
    "model": "offer",
    "nested": {
      "venues": {
        "flat": true,
        "model": "venue",
        "fields": [
          "id",
          "location",
          "name",
          "desc"
        ],
        "sources": [
          "venues"
        ]
      },
      "types": {
        "sources": [
          "types",
          "venues.types"
        ],
        "model": "loop",
        "fields": [
          "id"
        ]
      },
      "collections": {
        "sources": [
          "collections"
        ],
        "model": "collection",
        "fields": [
          "id"
        ]
      },
      "availabilities": {
        "sources": [
          "availabilities"
        ],
        "model": "schedule",
        "fields": [
          "id",
          "starts",
          "ends",
          "enabled",
          "created"
        ]
      },
      "keywords": {
        "sources": [
          "keywords"
        ],
        "model": "keyword",
        "fields": [
          "id",
          "names"
        ]
      },
      "business": {
        "sources": [
          "business"
        ],
        "model": "business",
        "fields": [
          "id",
          "name"
        ]
      },
      "regions": {
        "sources": [
          "regions",
          "regions.intersects",
          "venues.regions",
          "venues.regions.intersects"
        ],
        "model": "region",
        "fields": [
          "id",
          "location"
        ]
      },
      "categories": {
        "sources": [
          "venues.categories"
        ],
        "model": "category",
        "fields": [
          "id",
          "name"
        ]
      },
      "primary_types": {
        "flat": true,
        "model": "loop",
        "fields": [
          "id",
          "score_distance_scale",
          "score_random_scale"
        ],
        "sources": [
          "types",
          "venues.loop"
        ]
      }
    },
    "sources": [
      ""
    ]
  },
  "limit": 24,
  "result": {
    "sort": [
      {
        "is_limited": {
          "order": "desc"
        }
      },
      {
        "flagged": {
          "order": "desc"
        }
      },
      {
        "placement_priority": {
          "order": "desc"
        }
      },
      {
        "_score": {
          "order": "desc"
        }
      },
      {
        "_id": {
          "order": "asc"
        }
      }
    ],
    "query": {
      "bool": {
        "filter": [
          {
            "match": {
              "enabled": {
                "query": true,
                "operator": "and"
              }
            }
          },
          {
            "range": {
              "starts": {
                "lte": "now+4d/d"
              }
            }
          },
          {
            "range": {
              "ends": {
                "gte": "now-4d/d"
              }
            }
          },
          {
            "match": {
              "returned_for_type_c": {
                "query": true,
                "operator": "and"
              }
            }
          },
          {
            "nested": {
              "path": "availabilities",
              "query": {
                "bool": {
                  "filter": [
                    {
                      "match": {
                        "availabilities.enabled": {
                          "query": true,
                          "operator": "and"
                        }
                      }
                    },
                    {
                      "range": {
                        "availabilities.starts": {
                          "lte": "now"
                        }
                      }
                    },
                    {
                      "range": {
                        "availabilities.ends": {
                          "gte": "now"
                        }
                      }
                    },
                    {
                      "range": {
                        "availabilities.created": {
                          "lte": "now-0m"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "nested": {
              "path": "regions",
              "query": {
                "bool": {
                  "filter": [
                    {
                      "match": {
                        "regions.id": {
                          "query": "0c2cc1c0-8642-4ba3-8958-9736e34256a6",
                          "operator": "and"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "nested": {
              "path": "types",
              "query": {
                "bool": {
                  "filter": [
                    {
                      "terms": {
                        "types.id": [
                          "007f637a-3ee6-52fd-89e8-0960595b4fe0"
                        ]
                      }
                    }
                  ]
                }
              }
            }
          }
        ],
        "should": [
          {
            "function_score": {
              "script_score": {
                "script": {
                  "source": "0"
                }
              },
              "query": {
                "match_all": {}
              },
              "score_mode": "max"
            }
          },
          {
            "function_score": {
              "script_score": {
                "script": {
                  "lang": "painless",
                  "inline": "\n\ndouble remap(def value, def map) {\n  if (map[map.length - 2] <= value) {\n    return map[map.length - 1];\n  }\n  for (int i = map.length - 4; i >= 0; i -= 2) {\n    if (map[i] <= value) {\n      double percent = (value - map[i]) / (double)(map[i + 2] - map[i]);\n      return map[i + 1] + (map[i + 3] - map[i + 1]) * percent;\n    }\n  }\n  return map[1];\n}\n\nint result = doc[params.target].contains(params.value) ? 1 : 0;\nreturn remap(result, params.map);\n",
                  "params": {
                    "target": "is_limited",
                    "value": true,
                    "map": [
                      1,
                      0
                    ]
                  }
                }
              },
              "score_mode": "max",
              "boost_mode": "replace",
              "query": {
                "match_all": {}
              }
            }
          },
          {
            "nested": {
              "path": "primary_types",
              "query": {
                "function_score": {
                  "script_score": {
                    "script": {
                      "lang": "painless",
                      "inline": "\n\ndouble remap(def value, def map) {\n  if (map[map.length - 2] <= value) {\n    return map[map.length - 1];\n  }\n  for (int i = map.length - 4; i >= 0; i -= 2) {\n    if (map[i] <= value) {\n      double percent = (value - map[i]) / (double)(map[i + 2] - map[i]);\n      return map[i + 1] + (map[i + 3] - map[i + 1]) * percent;\n    }\n  }\n  return map[1];\n}\n\nint a = [doc[params.target].value, params.seed].hashCode();\na -= (a<<6);a ^= (a>>17);a -= (a<<9);a ^= (a<<4);\na -= (a<<3);a ^= (a<<10);a ^= (a>>15);\ndouble result = (Math.abs(a) / (double)Integer.MAX_VALUE) - 0.5;\nreturn remap(result, params.map);\n",
                      "params": {
                        "target": "primary_types.score_random_scale",
                        "seed": "0792fc81-8589-483c-94fb-80fe2c9400ee",
                        "map": [
                          0,
                          1
                        ]
                      }
                    }
                  },
                  "score_mode": "max",
                  "boost_mode": "replace",
                  "query": {
                    "match_all": {}
                  }
                }
              },
              "score_mode": "max"
            }
          }
        ]
      }
    },
    "from": 0,
    "size": 24,
    "_source": [
      ""
    ]
  },
  "filterBy": {
    "and": [
      [
        "availabilities.enabled",
        "==",
        true
      ],
      "availabilities.starts <= now",
      "availabilities.ends >= now",
      [
        "availabilities.created",
        "<=",
        "now-0m"
      ],
      [
        "enabled",
        "==",
        true
      ],
      "starts <= now+4d/d",
      "ends >= now-4d/d",
      [
        "regions.id",
        "==",
        "0c2cc1c0-8642-4ba3-8958-9736e34256a6"
      ],
      [
        "types.id",
        "in",
        [
          "007f637a-3ee6-52fd-89e8-0960595b4fe0"
        ]
      ],
      [
        "returned_for_type_c",
        "==",
        true
      ]
    ]
  },
  "toReturn": null,
  "offset": null,
  "scoreBy": [
    [
      "==",
      "is_limited",
      true,
      [
        [
          1,
          0
        ]
      ]
    ],
    [
      "random",
      "primary_types.score_random_scale",
      "0792fc81-8589-483c-94fb-80fe2c9400ee",
      [
        [
          0,
          1
        ]
      ]
    ]
  ]
}
