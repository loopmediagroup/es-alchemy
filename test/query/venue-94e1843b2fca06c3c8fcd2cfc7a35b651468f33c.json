{
  "orderBy": [
    [
      "offers.is_limited",
      "desc"
    ],
    [
      "offers.flagged",
      "desc"
    ],
    [
      "offers.placement_priority",
      "desc"
    ]
  ],
  "index": {
    "fields": [
      "id",
      "name",
      "desc",
      "location"
    ],
    "model": "venue",
    "nested": {
      "types": {
        "sources": [
          "types",
          "offers.types"
        ],
        "model": "loop",
        "fields": [
          "id"
        ]
      },
      "offers": {
        "sources": [
          "offers"
        ],
        "model": "offer",
        "fields": [
          "id",
          "name",
          "desc",
          "exclusive",
          "flagged",
          "is_limited",
          "placement_priority",
          "returned_for_type_a",
          "returned_for_type_c",
          "returned_for_type_b",
          "min_version"
        ]
      },
      "collections": {
        "sources": [
          "offers.collections"
        ],
        "model": "collection",
        "fields": [
          "id"
        ]
      },
      "availabilities": {
        "sources": [
          "offers.availabilities"
        ],
        "model": "schedule",
        "fields": [
          "id",
          "starts",
          "ends",
          "enabled",
          "created"
        ]
      },
      "keywords": {
        "sources": [
          "offers.keywords"
        ],
        "model": "keyword",
        "fields": [
          "id",
          "names"
        ]
      },
      "business": {
        "sources": [
          "business"
        ],
        "model": "business",
        "fields": [
          "id",
          "name"
        ]
      },
      "regions": {
        "sources": [
          "regions",
          "regions.intersects",
          "offers.regions",
          "offers.regions.intersects"
        ],
        "model": "region",
        "fields": [
          "id",
          "location"
        ]
      },
      "categories": {
        "sources": [
          "categories"
        ],
        "model": "category",
        "fields": [
          "id",
          "name"
        ]
      },
      "primary_types": {
        "flat": true,
        "model": "loop",
        "fields": [
          "id",
          "score_distance_scale",
          "score_random_scale"
        ],
        "sources": [
          "loop",
          "offers.types"
        ]
      }
    },
    "sources": [
      ""
    ]
  },
  "limit": 8,
  "result": {
    "sort": [
      {
        "offers.is_limited": {
          "order": "desc",
          "mode": "max",
          "nested_path": "offers"
        }
      },
      {
        "offers.flagged": {
          "order": "desc",
          "mode": "max",
          "nested_path": "offers"
        }
      },
      {
        "offers.placement_priority": {
          "order": "desc",
          "mode": "max",
          "nested_path": "offers"
        }
      },
      {
        "id": {
          "order": "asc",
          "mode": "max"
        }
      },
      {
        "_score": {
          "order": "desc"
        }
      }
    ],
    "query": {
      "function_score": {
        "query": {
          "bool": {
            "filter": [
              {
                "bool": {
                  "minimum_should_match": 1,
                  "should": [
                    {
                      "geo_distance": {
                        "distance": "3km",
                        "location": [
                          0.5,
                          0.5
                        ]
                      }
                    },
                    {
                      "nested": {
                        "path": "regions",
                        "query": {
                          "bool": {
                            "filter": [
                              {
                                "match": {
                                  "regions.id": {
                                    "query": "16456cd3-7a4e-4c18-acd7-28978c2539e0",
                                    "operator": "and"
                                  }
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  ]
                }
              },
              {
                "nested": {
                  "path": "offers",
                  "query": {
                    "bool": {
                      "filter": [
                        {
                          "match": {
                            "offers.returned_for_type_a": {
                              "query": true,
                              "operator": "and"
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              },
              {
                "nested": {
                  "path": "availabilities",
                  "query": {
                    "bool": {
                      "filter": [
                        {
                          "match": {
                            "availabilities.enabled": {
                              "query": true,
                              "operator": "and"
                            }
                          }
                        },
                        {
                          "range": {
                            "availabilities.starts": {
                              "lte": "now"
                            }
                          }
                        },
                        {
                          "range": {
                            "availabilities.ends": {
                              "gte": "now"
                            }
                          }
                        },
                        {
                          "range": {
                            "availabilities.created": {
                              "lte": "now-0m"
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            ]
          }
        },
        "functions": [
          {
            "script_score": {
              "script": {
                "lang": "painless",
                "inline": "\ndouble scale = 50;\ndouble lambda = Math.log(params.decay) / scale;\ndouble score = Double.MAX_VALUE;\ndouble lat2 = params.lat;\ndouble lon2 = params.lon;\ndouble TO_METERS = 6371008.7714D;\ndouble TO_RADIANS = Math.PI / 180D;\nfor (int i = 0; i < doc[params.field].values.length; i++) {\n  // todo: https://github.com/elastic/elasticsearch/issues/25796\n  double lat1 = doc[params.field][i].lat;\n  double lon1 = doc[params.field][i].lon;\n  double x1 = lat1 * TO_RADIANS;\n  double x2 = lat2 * TO_RADIANS;\n  double h1 = 1 - Math.cos(x1 - x2);\n  double h2 = 1 - Math.cos((lon1 - lon2) * TO_RADIANS);\n  double h = h1 + Math.cos(x1) * Math.cos(x2) * h2;\n  double dist = TO_METERS * 2 * Math.asin(Math.min(1, Math.sqrt(h * 0.5)));\n  // http://tiny.cc/ylp2oy\n  double cscore = Math.exp(lambda * Math.max(0, dist - params.offset));\n  score = Math.min(score, cscore);\n}\nreturn score; ",
                "params": {
                  "decay": 0.5,
                  "lon": 0.5,
                  "field": "location",
                  "scale_field": 50,
                  "offset": 75,
                  "lat": 0.5
                }
              }
            }
          },
          {
            "script_score": {
              "script": {
                "lang": "painless",
                "inline": "\ndouble scale = Collections.max(doc[params.scale_field].getValues());\ndouble lambda = Math.log(params.decay) / scale;\ndouble score = Double.MAX_VALUE;\ndouble lat2 = params.lat;\ndouble lon2 = params.lon;\ndouble TO_METERS = 6371008.7714D;\ndouble TO_RADIANS = Math.PI / 180D;\nfor (int i = 0; i < doc[params.field].values.length; i++) {\n  // todo: https://github.com/elastic/elasticsearch/issues/25796\n  double lat1 = doc[params.field][i].lat;\n  double lon1 = doc[params.field][i].lon;\n  double x1 = lat1 * TO_RADIANS;\n  double x2 = lat2 * TO_RADIANS;\n  double h1 = 1 - Math.cos(x1 - x2);\n  double h2 = 1 - Math.cos((lon1 - lon2) * TO_RADIANS);\n  double h = h1 + Math.cos(x1) * Math.cos(x2) * h2;\n  double dist = TO_METERS * 2 * Math.asin(Math.min(1, Math.sqrt(h * 0.5)));\n  // http://tiny.cc/ylp2oy\n  double cscore = Math.exp(lambda * Math.max(0, dist - params.offset));\n  score = Math.min(score, cscore);\n}\nreturn score; ",
                "params": {
                  "decay": 0.5,
                  "lon": 0.5,
                  "field": "location",
                  "scale_field": "primary_types.score_distance_scale",
                  "offset": 100,
                  "lat": 0.5
                }
              }
            }
          },
          {
            "script_score": {
              "script": {
                "lang": "painless",
                "inline": "return doc[params.field].values.contains(true) ? 1 : 0;",
                "params": {
                  "field": "offers.is_limited"
                }
              }
            }
          },
          {
            "script_score": {
              "script": {
                "lang": "painless",
                "inline": "\nint a = [doc['id'].value, params.seed].hashCode();\na -= (a<<6);a ^= (a>>17);a -= (a<<9);a ^= (a<<4);\na -= (a<<3);a ^= (a<<10);a ^= (a>>15);\ndouble scale = Collections.max(doc[params.scale_field].getValues()) / 100.0;\ndouble value = (Math.abs(a) / (double)Integer.MAX_VALUE) - 0.5;\nreturn scale * value\n",
                "params": {
                  "scale_field": "primary_types.score_random_scale",
                  "seed": "2018-08-1798-116456cd3-7a4e-4c18-acd7-28978c2539e0"
                }
              }
            }
          }
        ],
        "score_mode": "sum",
        "boost_mode": "replace"
      }
    },
    "from": 0,
    "size": 8,
    "_source": [
      ""
    ]
  },
  "filterBy": {
    "and": [
      [
        "availabilities.enabled",
        "==",
        true
      ],
      "availabilities.starts <= now",
      "availabilities.ends >= now",
      [
        "availabilities.created",
        "<=",
        "now-0m"
      ],
      {
        "or": [
          [
            "regions.id",
            "==",
            "16456cd3-7a4e-4c18-acd7-28978c2539e0"
          ],
          [
            "location",
            "distance",
            [
              0.5,
              0.5
            ],
            "3km"
          ]
        ]
      },
      [
        "offers.returned_for_type_a",
        "==",
        true
      ]
    ]
  },
  "toReturn": null,
  "offset": null,
  "scoreBy": [
    [
      "distance",
      "location",
      [
        0.5,
        0.5
      ],
      75,
      50
    ],
    [
      "distance",
      "location",
      [
        0.5,
        0.5
      ],
      100,
      "primary_types.score_distance_scale"
    ],
    [
      "bool",
      "offers.is_limited"
    ],
    [
      "random",
      "2018-08-1798-116456cd3-7a4e-4c18-acd7-28978c2539e0",
      "primary_types.score_random_scale"
    ]
  ]
}
